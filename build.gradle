plugins {
    id 'maven-publish'
    id 'fabric-loom' version '1.5-SNAPSHOT' apply false

    // https://github.com/ReplayMod/preprocessor
    // https://github.com/Fallen-Breath/preprocessor
    id 'com.replaymod.preprocess' version 'ce1aeb2b'

    // https://github.com/Fallen-Breath/yamlang
    id 'me.fallenbreath.yamlang' version '1.3.1' apply false
}

preprocess {
    def mc117 = createNode('1.17.1', 1_17_01, '')
    def mc118 = createNode('1.18.2', 1_18_02, '')
    def mc119 = createNode('1.19.4', 1_19_04, '')
    def mc120 = createNode('1.20.4', 1_20_04, '')

    mc120.link(mc119, null)
    mc119.link(mc118, file("versions/mapping-1.19.4-1.18.2.txt"))
    mc118.link(mc117, null)
}

tasks.register('buildAndGather') {
    subprojects {
        dependsOn project.tasks.named('build').get()
    }
    doFirst {
        println 'Gathering builds'
        def buildLibs = {
            p -> p.buildDir.toPath().resolve('libs')
        }
        delete fileTree(buildLibs(rootProject)) {
            include '*'
        }
        subprojects {
            copy {
                from(buildLibs(project)) {
                    include '*.jar'
                    exclude '*-dev.jar', '*-sources.jar', '*-shadow.jar'
                }
                into buildLibs(rootProject)
                duplicatesStrategy DuplicatesStrategy.INCLUDE
            }
        }
    }
}


//
//
//version = project.mod_version
//group = project.maven_group
//
//base {
//    archivesName = project.archives_base_name
//}
//
//repositories {
//    // Add repositories to retrieve artifacts from in here.
//    // You should only use this when depending on other mods because
//    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
//    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
//    // for more information about repositories.
//    maven {
//        url "https://cursemaven.com"
//        content {
//            includeGroup "curse.maven"
//        }
//    }
//
//    maven {
//        name("Modrinth Maven")
//        url("https://api.modrinth.com/maven")
//
//        content {
//            includeGroup("maven.modrinth")
//        }
//    }
//
//    mavenCentral()
//}
//
//dependencies {
//    // To change the versions see the gradle.properties file
//    minecraft "com.mojang:minecraft:${project.minecraft_version}"
//    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
//    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
//
//    // Fabric API. This is technically optional, but you probably want it anyway.
//    // modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
//
//    // Uncomment the following line to enable the deprecated Fabric API modules.
//    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.
//    modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
//
//    modImplementation "curse.maven:malilib-303119:${project.malilib_file_id}"
//    modImplementation "curse.maven:item-scroller-242064:${project.item_scroller_file_id}"
//    modImplementation("top.hendrixshen.magiclib:magiclib-${project.minecraft_version.replace(".", "_")}:${project.magiclib_version}") {
//        exclude(group: "carpet", module: "fabric-carpet")
//    }
//}
//
//processResources {
//    inputs.property "version", project.version
//    inputs.property "minecraft_dependency", project.minecraft_dependency
//
//    filesMatching("fabric.mod.json") {
//        def valueMap = [
//                "version"             : project.version,
//                "minecraft_dependency": project.minecraft_dependency
//        ]
//        expand valueMap
//    }
//}
//
//tasks.withType(JavaCompile).configureEach {
//    it.options.release = 17
//}
//
//java {
//    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
//    // if it is present.
//    // If you remove this line, sources will not be generated.
//    withSourcesJar()
//
//    sourceCompatibility = JavaVersion.VERSION_17
//    targetCompatibility = JavaVersion.VERSION_17
//}
//
//jar {
//    from("LICENSE") {
//        rename { "${it}_${project.base.archivesName.get()}" }
//    }
//}
//
//// configure the maven publication
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }
//
//    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
//    repositories {
//        // Add repositories to publish to here.
//        // Notice: This block does NOT have the same function as the block in the top level.
//        // The repositories here will be used for publishing your artifact, not for
//        // retrieving dependencies.
//    }
//}